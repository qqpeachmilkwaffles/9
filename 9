def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,def func7(arg46, arg47):
    var60 = func8(arg47, arg46)
    var65 = func9(arg46, arg47)
    var69 = func10(var65, var60)
    if var69 < var65:
        var70 = arg46 ^ 15
    else:
        var70 = -728149365 | (975 ^ -59 - var60)
    var71 = (var65 | arg47) & 44 & var60
    var72 = arg47 - var69
    var73 = var65 + arg46
    var74 = var65 & var71
    var75 = var65 | var74 ^ var60 + 1071063049
    var76 = ((-883558999 ^ arg46) ^ arg46) + 764
    var77 = ((var65 + var69) | 1882173021) + var73
    if var69 < var77:
        var78 = var73 | arg46
    else:
        var78 = var72 - arg47 | var76 ^ var77
    var79 = (823 & var60 + var74) - var72
    var80 = (var73 - var74 - var71) | var60
    var81 = var69 | var73
    var82 = var76 + var69 + var74 | var72
    var83 = var74 | (var74 - -335 | var80)
    result = (919 - (((var77 | (arg46 | var69 | var74 | var73) + var82) - var74 + var83 - var77) ^ var83)) + var80
    return result
def func9(arg61, arg62):
    var63 = 0
    for var64 in range(8):
        var63 += arg62 ^ arg62
    return var63
def func8(arg48, arg49):
    var50 = arg49 - arg49
    var51 = (-1651471612 & arg49 | 432) ^ arg48
    var52 = (415 & arg49) & (var51 + arg49)
    var53 = var51 + (arg48 + var51) + var50
    var54 = (arg48 ^ var50) | var53
    var55 = var52 ^ var53 + (arg49 & var51)
    var56 = var52 & -2041466894
    var57 = var53 & (var56 & arg48) + 470
    var58 = -1964281625 | var56 - -124334291
    var59 = (var57 | var52 | var57) & 393554115
    result = var51 + arg48
    return result
def func1(arg1, arg2):
    var6 = func2(arg1, arg2)
    var31 = var9(arg2, var6)
    var32 = var6 & arg1
    var33 = 1174860355 & -1343632535 ^ var32 - arg1
    if arg2 < var31:
        var34 = arg2 + arg2
    else:
        var34 = var33 ^ var31
    var35 = var31 ^ -1085963079
    var36 = var32 & -69854035 ^ var31
    var37 = 336764838 + var36 ^ var33 ^ var31
    var38 = (var36 ^ var32) & arg2
    var39 = arg2 - 993
    var40 = (754 - var35) + arg2 & arg2
    var41 = var31 - ((arg1 | var36) & var38)
    var42 = var33 + (var32 - var33) ^ var41
    var43 = (var39 ^ var33) + var32 - var36
    var44 = ((var35 ^ arg2) + var31) | arg1
    var45 = var31 & (var31 | var42) & var41
    result = var36 | var45 - var36 + var36 | (var40 ^ (arg2 - arg2))
    return result
def func6(arg10, arg11):
    var12 = (arg11 - -706 - arg10) + arg10
    var13 = 460 | -919044824 ^ arg11
    var14 = (var13 | (1651731090 & arg10)) | arg11
    var15 = arg10 ^ (arg10 + arg10 + arg10)
    var16 = var12 + var15 ^ var12 | var15
    var17 = (var14 ^ arg11 - var12) + var12
    var18 = arg10 - var12 | arg11 - arg11
    var19 = ((arg10 ^ 360847659) + 274168761) - -1614878052
    if var15 < arg10:
        var20 = -1367295069 | arg10 ^ arg10 + var12
    else:
        var20 = (var18 + var19 - -55) - var18
    if var18 < arg11:
        var21 = (var18 | var18) & var18 & var14
    else:
        var21 = (var12 & var19 + var13) + 316
    if var12 < var17:
        var22 = arg10 | var16 | var16 & var12
    else:
        var22 = -479 | var16 - 874035024 + var17
    var23 = arg10 ^ arg10 & arg11 + var15
    var24 = ((-84709167 | var13) | var16) | arg11
    var25 = ((var16 - 669103675) - var23) + 506
    var26 = var25 | var12 + var23 & var23
    var27 = var23 ^ arg11
    var28 = 220 + var17
    var29 = (var16 + (var24 - var18)) ^ var25
    var30 = (var17 ^ arg11 - var25) + var12
    result = var18 & (var16 | var25) ^ var18 & var13 & var25
    return result
def func5():
    closure = [-6]
    def func4(arg7, arg8):
        closure[0] += func6(arg7, arg8)
        return closure[0]
    func = func4
    return func
var9 = func5()
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = rest + ((rest ^ acc + 0) & -10) | 4 | -10
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
def func10(arg66, arg67):
    def func11(acc, rest):
        var68 = (3 | 1) - 2
        if acc == 0:
            return var68
        else:
            result = func11(acc - 1, var68)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 7'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func7(x, i)
        print x,
